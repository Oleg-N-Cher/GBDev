MODULE [foreign] Hardware; IMPORT SYSTEM;

(** @file gb/hardware.h
    Defines that let the GB's hardware registers be accessed
    from C.  See the Pan doc for what to set them to.
*)

TYPE
  BYTE = SYSTEM.BYTE;

VAR(*

__sfr __at 0x00 P1_REG		; /* Joystick: 1.1.P15.P14.P13.P12.P11.P10 */
__sfr __at 0x01 SB_REG		; /* Serial IO data buffer */
__sfr __at 0x02 SC_REG		; /* Serial IO control register */
__sfr __at 0x04 DIV_REG		; /* Divider register */
__sfr __at 0x05 TIMA_REG		; /* Timer counter */
__sfr __at 0x06 TMA_REG		; /* Timer modulo */
__sfr __at 0x07 TAC_REG		; /* Timer control */
__sfr __at 0x0f IF_REG		; /* Interrupt flags: 0.0.0.JOY.SIO.TIM.LCD.VBL */
__sfr __at 0x10 NR10_REG		; /* Sound register */
__sfr __at 0x11 NR11_REG		; /* Sound register */
__sfr __at 0x12 NR12_REG		; /* Sound register */
__sfr __at 0x13 NR13_REG		; /* Sound register */
__sfr __at 0x14 NR14_REG		; /* Sound register */
__sfr __at 0x16 NR21_REG		; /* Sound register */
__sfr __at 0x17 NR22_REG		; /* Sound register */
__sfr __at 0x18 NR23_REG		; /* Sound register */
__sfr __at 0x19 NR24_REG		; /* Sound register */
__sfr __at 0x1a NR30_REG		; /* Sound register */
__sfr __at 0x1b NR31_REG		; /* Sound register */
__sfr __at 0x1c NR32_REG		; /* Sound register */
__sfr __at 0x1d NR33_REG		; /* Sound register */
__sfr __at 0x1e NR34_REG		; /* Sound register */
__sfr __at 0x20 NR41_REG		; /* Sound register */
__sfr __at 0x21 NR42_REG		; /* Sound register */
__sfr __at 0x22 NR43_REG		; /* Sound register */
__sfr __at 0x23 NR44_REG		; /* Sound register */
__sfr __at 0x25 NR50_REG		; /* Sound register */
__sfr __at 0x25 NR51_REG		; /* Sound register */
__sfr __at 0x26 NR52_REG		; /* Sound register */
*)
  LCDC_REG  ["LCDC_REG" ]: BYTE; (* LCD control *)
  STAT_REG  ["STAT_REG" ]: BYTE; (* LCD status *)
  SCY_REG   ["SCY_REG"  ]: BYTE; (* Scroll Y *)
  SCX_REG   ["SCX_REG"  ]: BYTE; (* Scroll X *)
  LY_REG    ["LY_REG"   ]: BYTE; (* LCDC Y-coordinate *)
  LYC_REG   ["LYC_REG"  ]: BYTE; (*  LY compare *)
  DMA_REG   ["DMA_REG"  ]: BYTE; (*  DMA transfer *)
  BGP_REG   ["BGP_REG"  ]: BYTE; (* BG palette data *)
  OBP0_REG  ["OBP0_REG" ]: BYTE; (* OBJ palette 0 data *)
  OBP1_REG  ["OBP1_REG" ]: BYTE; (* OBJ palette 1 data *)
  WY_REG    ["WY_REG"   ]: BYTE; (* Window Y coordinate *)
  WX_REG    ["WX_REG"   ]: BYTE; (* Window X coordinate *)
  KEY1_REG  ["KEY1_REG" ]: BYTE; (* CPU speed *)
  VBK_REG   ["VBK_REG"  ]: BYTE; (* VRAM bank *)
  HDMA1_REG ["HDMA1_REG"]: BYTE; (* DMA control 1 *)
  HDMA2_REG ["HDMA2_REG"]: BYTE; (* DMA control 2 *)
  HDMA3_REG ["HDMA3_REG"]: BYTE; (* DMA control 3 *)
  HDMA4_REG ["HDMA4_REG"]: BYTE; (* DMA control 4 *)
  HDMA5_REG ["HDMA5_REG"]: BYTE; (* DMA control 5 *)
  RP_REG    ["RP_REG"   ]: BYTE; (* IR port *)
  BCPS_REG  ["BCPS_REG" ]: BYTE; (* BG color palette specification *)
  BCPD_REG  ["BCPD_REG" ]: BYTE; (* BG color palette data *)
  OCPS_REG  ["OCPS_REG" ]: BYTE; (* OBJ color palette specification *)
  OCPD_REG  ["OCPD_REG" ]: BYTE; (* OBJ color palette data *)
  SVBK_REG  ["SVBK_REG" ]: BYTE; (* WRAM bank *)
  IE_REG    ["IE_REG"   ]: BYTE; (* Interrupt enable *)

PROCEDURE- includeHw "#include <gb/hardware.h>";

END Hardware.
